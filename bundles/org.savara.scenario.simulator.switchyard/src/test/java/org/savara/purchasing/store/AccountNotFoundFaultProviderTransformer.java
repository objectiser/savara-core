/*
 * Generated by Savara.
 */
package org.savara.purchasing.store;

import java.io.StringWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.namespace.QName;

import org.switchyard.common.xml.QNameUtil;
import org.switchyard.transform.Transformer;

public class AccountNotFoundFaultProviderTransformer extends org.switchyard.transform.BaseTransformer<org.savara.purchasing.store.AccountNotFoundFault,String>
				implements Transformer<org.savara.purchasing.store.AccountNotFoundFault,String> {
    
	private static final Logger LOG=Logger.getLogger(AccountNotFoundFaultProviderTransformer.class.getName());
	
	public QName getTo() {
		return (QName.valueOf("{http://www.jboss.org/examples/store}AccountNotFound"));
	}
	
	public String transform(org.savara.purchasing.store.AccountNotFoundFault type) {
		Marshaller marshaller;
		JAXBContext _jaxbContext;

		try {
			_jaxbContext = JAXBContext.newInstance("org.jboss.examples.store");
		} catch (Exception e) {
			LOG.log(Level.SEVERE, "Failed to create JAXBContext for '" + getFrom() + "'.", e);
			return (null);
		}

		try {
			marshaller = _jaxbContext.createMarshaller();
		} catch (Exception e) {
			LOG.log(Level.SEVERE, "Failed to create Marshaller for type '" + getFrom() + "'.", e);
			return (null);
		}

		try {
			StringWriter resultWriter = new StringWriter();
			Object javaObject = type.getFaultInfo();
			JAXBElement jaxbElement = new JAXBElement(getTo(), QNameUtil.toJavaMessageType(getFrom()), javaObject);

			marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
			marshaller.marshal(jaxbElement, resultWriter);

			return (resultWriter.toString());
		} catch (Exception e) {
			LOG.log(Level.SEVERE, "Failed to unmarshall for type '" + getFrom() + "'.", e);
			return (null);
		}
	}
}
