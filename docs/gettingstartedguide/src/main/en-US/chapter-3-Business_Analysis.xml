<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="sid-3735775">
    
    <title>Business Analysis</title>
    <section id="sid-3735777">
      
      <title>Create Example Messages</title>
      <para>The first step is to create the example messages, to be used by the scenarios that will document the business requirements.</para>
      <para>
        Some previously defined examples can be found in the
        <code>purchasing</code>
        Eclipse project. For example, the Buy request is defined as:
      </para>
      <informalexample>
        <programlisting>&lt;tns:BuyRequest xmlns:tns="http://www.jboss.org/examples/store"
            id="1" product="Laptop" /&gt;</programlisting>
      </informalexample>
      <para>Although a schema may not have been defined at this stage, unless one previously existed that is being reused, it is a good idea to define a namespace for the message type. This is because it will be used within the scenarios and architectural models defined in the following stage. If the namespace was not specified at this stage, then the example messages, scenarios and architectural models would need to be updated at a later stage.</para>
      <para>Although this phase has been defined before the definition of the scenarios, in practice these phases are iterative. So scenarios and example messages would be defined concurrently, as the requirements evolve through discussions between the business analyst and users.</para>
    </section>
    <section id="sid-3735776">
      
      <title>Outline Scenarios</title>
      <para>When designing a system, it is necessary to capture requirements. Various approaches can be used for this, but currently there are no mechanisms that enable the requirements to be documented in such a way to enable an implementation to be validated back against the requirements.</para>
      <para>
        The SAVARA tools provide a means of describing requirements, representing specific use cases for the interactions between a set of cooperating services, using scenarios - which can be considered similar to UML sequence diagrams that have been enhanced to include example messages. In the
        <code>purchasing</code>
        Eclipse project, the
        <code>SuccessfulPurchase.scn</code>
        scenario looks like this:
      </para>
      <para>
        <figure>
<title>Scenario representing a successful purchase</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/3735776/SuccessfulPurchasePreTest.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>The business requirements can therefore be defined as a set of scenarios, each demonstrating a specific use-case, or path through the business process being enacted.</para>
      <para>It is also possible to define scenarios that represent invalid use cases, that should not be implemented by the system. In these cases, the invalid message events (i.e. the sending or receiving icons) will be flagged as "Error Expected", to indicate that they should not occur.</para>
    </section>
  </chapter>
